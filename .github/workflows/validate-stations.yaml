name: Validate Stations JSON

on:
  pull_request_target:
    paths:
      - "custom_components/prix_carburant/stations_name.json"

jobs:
  validate-stations:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      statuses: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Make validation script executable
        run: chmod +x scripts/validate_stations.py

      - name: Validate stations_name.json
        id: validate-json
        run: |
          echo "Validating stations_name.json file..."
          python scripts/validate_stations.py custom_components/prix_carburant/stations_name.json
          if [ $? -eq 0 ]; then
            echo "JSON is valid"
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "JSON is invalid"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Check if PR only modifies stations_name.json
        id: check-pr-files
        if: steps.validate-json.outputs.valid == 'true'
        uses: dorny/paths-filter@v3
        with:
          filters: |
            stations_file:
              - 'custom_components/prix_carburant/stations_name.json'
            custom_components:
              - 'custom_components/prix_carburant/*.py'

      # Those actions will auto-approve and auto-merge the PR if it only modifies the stations_name.json file
      - name: Auto-approve PR
        if: steps.check-pr-files.outputs.stations_file == 'true' && steps.check-pr-files.outputs.custom_components == 'false'
        uses: hmarr/auto-approve-action@v4
        with:
          review-message: "Stations data automated approved PR"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.check-pr-files.outputs.stations_file == 'true' && steps.check-pr-files.outputs.custom_components == 'false'
        run: |
          echo "Waiting for other checks to complete..."
          for i in {1..120}; do
            STATUS=$(gh pr checks ${{ github.event.pull_request.number }} --json name,state --jq '[.[] | select(.name != "validate-stations")] | all(.state == "SUCCESS")')
            if [[ "$STATUS" == "true" ]]; then
              gh pr merge "${{ github.event.pull_request.number }}" --auto --squash --subject "chore: update stations data (#${{ github.event.pull_request.number }})"
              exit 0
            fi
            sleep 10
          done
          echo "Timeout: Other checks did not complete successfully within 20 minutes."
          exit 1
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB }}
